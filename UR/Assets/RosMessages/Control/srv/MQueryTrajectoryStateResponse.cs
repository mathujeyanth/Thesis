//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.Control
{
    public class MQueryTrajectoryStateResponse : Message
    {
        public const string RosMessageName = "control_msgs/QueryTrajectoryState";

        public string[] name;
        public double[] position;
        public double[] velocity;
        public double[] acceleration;

        public MQueryTrajectoryStateResponse()
        {
            this.name = new string[0];
            this.position = new double[0];
            this.velocity = new double[0];
            this.acceleration = new double[0];
        }

        public MQueryTrajectoryStateResponse(string[] name, double[] position, double[] velocity, double[] acceleration)
        {
            this.name = name;
            this.position = position;
            this.velocity = velocity;
            this.acceleration = acceleration;
        }
        public override List<byte[]> SerializationStatements()
        {
            var listOfSerializations = new List<byte[]>();
            
            listOfSerializations.Add(BitConverter.GetBytes(name.Length));
            foreach(var entry in name)
                listOfSerializations.Add(SerializeString(entry));
            
            listOfSerializations.Add(BitConverter.GetBytes(position.Length));
            foreach(var entry in position)
                listOfSerializations.Add(BitConverter.GetBytes(entry));
            
            listOfSerializations.Add(BitConverter.GetBytes(velocity.Length));
            foreach(var entry in velocity)
                listOfSerializations.Add(BitConverter.GetBytes(entry));
            
            listOfSerializations.Add(BitConverter.GetBytes(acceleration.Length));
            foreach(var entry in acceleration)
                listOfSerializations.Add(BitConverter.GetBytes(entry));

            return listOfSerializations;
        }

        public override int Deserialize(byte[] data, int offset)
        {
            
            var nameArrayLength = DeserializeLength(data, offset);
            offset += 4;
            this.name= new string[nameArrayLength];
            for(var i = 0; i < nameArrayLength; i++)
            {
                var nameStringBytesLength = DeserializeLength(data, offset);
                offset += 4;
                this.name[i] = DeserializeString(data, offset, nameStringBytesLength);
                offset += nameStringBytesLength;
            }
            
            var positionArrayLength = DeserializeLength(data, offset);
            offset += 4;
            this.position= new double[positionArrayLength];
            for(var i = 0; i < positionArrayLength; i++)
            {
                this.position[i] = BitConverter.ToDouble(data, offset);
                offset += 8;
            }
            
            var velocityArrayLength = DeserializeLength(data, offset);
            offset += 4;
            this.velocity= new double[velocityArrayLength];
            for(var i = 0; i < velocityArrayLength; i++)
            {
                this.velocity[i] = BitConverter.ToDouble(data, offset);
                offset += 8;
            }
            
            var accelerationArrayLength = DeserializeLength(data, offset);
            offset += 4;
            this.acceleration= new double[accelerationArrayLength];
            for(var i = 0; i < accelerationArrayLength; i++)
            {
                this.acceleration[i] = BitConverter.ToDouble(data, offset);
                offset += 8;
            }

            return offset;
        }

        public override string ToString()
        {
            return "MQueryTrajectoryStateResponse: " +
            "\nname: " + System.String.Join(", ", name.ToList()) +
            "\nposition: " + System.String.Join(", ", position.ToList()) +
            "\nvelocity: " + System.String.Join(", ", velocity.ToList()) +
            "\nacceleration: " + System.String.Join(", ", acceleration.ToList());
        }
    }
}
